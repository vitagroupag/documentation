openapi: 3.0.3
info:
  title: EHRbase Enterprise
  description: >-
    EHRbase Enterprise operations that are not part of the OSS, but are part of
    enterprise plugins.


    Requires authorization with a tenant user upfront.


    Works with the following enviornmnents:


    - cdr-core-dev

    - cdr-core-integration

    - HIP.lab integration
  version: 1.0.0
  contact: {}
servers:
  - url: '{{ehrbaseBaseUrl}}'
paths:
  /plugin/event-trigger/service/:
    get:
      tags:
        - Event Trigger
      summary: Get All Event Triggers
      description: Get All Event Triggers
      operationId: getAllEventTriggers
      responses:
        '200':
          description: ''
    post:
      tags:
        - Event Trigger
      summary: Create Event Trigger
      description: Create Event Trigger
      operationId: createEventTrigger
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: object
                  properties:
                    date:
                      type: string
                      example: '2022-08-25T12:40:26.945Z'
                    email:
                      type: string
                      example: alexandru.vidrean.ext@vitagroup.ag
                    name:
                      type: string
                      example: Alexandru Vidrean
                    organisation:
                      type: string
                      example: VitaGroup AG
                definition:
                  type: object
                  properties:
                    mode:
                      type: string
                      example: AFTER
                    rules:
                      type: array
                      items:
                        type: object
                        properties:
                          diastolic:
                            type: object
                            properties:
                              then:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    amqpPublish:
                                      type: object
                                      properties:
                                        channel:
                                          type: string
                                          example: amqp
                                        command:
                                          type: string
                                          example: publish
                                        exchange:
                                          type: string
                                          example: demo-exchange
                                        routing-key:
                                          type: string
                                          example: '*'
                                    httpPost:
                                      type: object
                                      properties:
                                        channel:
                                          type: string
                                          example: http
                                        command:
                                          type: string
                                          example: notify
                                        url:
                                          type: string
                                          example: http://localhost:1080/demo
                                    logEvent:
                                      type: object
                                      properties:
                                        channel:
                                          type: string
                                          example: logger
                                        command:
                                          type: string
                                          example: notify
                                example:
                                  - logEvent:
                                      channel: logger
                                      command: notify
                                  - amqpPublish:
                                      channel: amqp
                                      command: publish
                                      exchange: demo-exchange
                                      routing-key: '*'
                                  - httpPost:
                                      channel: http
                                      command: notify
                                      url: http://localhost:1080/demo
                              when:
                                type: object
                                properties:
                                  aql:
                                    type: string
                                    example: >-
                                      select e/ehr_id/value as ehr_id,
                                      c/uid/value as composition_id,
                                      o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value
                                      as diastolic from EHR e contains
                                      OBSERVATION
                                      o[openEHR-EHR-OBSERVATION.sample_blood_pressure.v1]
                                      AND COMPOSITION c where
                                      o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude
                                      > 140
                      example:
                        - diastolic:
                            then:
                              - logEvent:
                                  channel: logger
                                  command: notify
                              - amqpPublish:
                                  channel: amqp
                                  command: publish
                                  exchange: demo-exchange
                                  routing-key: '*'
                              - httpPost:
                                  channel: http
                                  command: notify
                                  url: http://localhost:1080/demo
                            when:
                              aql: >-
                                select e/ehr_id/value as ehr_id, c/uid/value as
                                composition_id,
                                o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value
                                as diastolic from EHR e contains OBSERVATION
                                o[openEHR-EHR-OBSERVATION.sample_blood_pressure.v1]
                                AND COMPOSITION c where
                                o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude
                                > 140
                id:
                  type: string
                  example: simple_test_trigger_bp.v1
                state:
                  type: string
                  example: active
            examples:
              Create Event Trigger:
                value:
                  author:
                    date: '2022-08-25T12:40:26.945Z'
                    email: alexandru.vidrean.ext@vitagroup.ag
                    name: Alexandru Vidrean
                    organisation: VitaGroup AG
                  definition:
                    mode: AFTER
                    rules:
                      - diastolic:
                          then:
                            - logEvent:
                                channel: logger
                                command: notify
                            - amqpPublish:
                                channel: amqp
                                command: publish
                                exchange: demo-exchange
                                routing-key: '*'
                            - httpPost:
                                channel: http
                                command: notify
                                url: http://localhost:1080/demo
                          when:
                            aql: >-
                              select e/ehr_id/value as ehr_id, c/uid/value as
                              composition_id,
                              o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value
                              as diastolic from EHR e contains OBSERVATION
                              o[openEHR-EHR-OBSERVATION.sample_blood_pressure.v1]
                              AND COMPOSITION c where
                              o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude
                              > 140
                  id: simple_test_trigger_bp.v1
                  state: active
      responses:
        '200':
          description: ''
  /plugin/event-trigger/service/{event_trigger_uuid}:
    put:
      tags:
        - Event Trigger
      summary: Activate Event Trigger
      description: Activate Event Trigger
      operationId: activateEventTrigger
      parameters:
        - name: activate
          in: query
          schema:
            type: string
            example: 'false'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: object
                  properties:
                    date:
                      type: string
                      example: '2022-08-25T12:40:26.945Z'
                    email:
                      type: string
                      example: alexandru.vidrean.ext@vitagroup.ag
                    name:
                      type: string
                      example: Alexandru Vidrean
                    organisation:
                      type: string
                      example: VitaGroup AG
                definition:
                  type: object
                  properties:
                    mode:
                      type: string
                      example: AFTER
                    rules:
                      type: array
                      items:
                        type: object
                        properties:
                          diastolic:
                            type: object
                            properties:
                              then:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    amqpPublish:
                                      type: object
                                      properties:
                                        channel:
                                          type: string
                                          example: amqp
                                        command:
                                          type: string
                                          example: publish
                                        exchange:
                                          type: string
                                          example: demo-exchange
                                        routing-key:
                                          type: string
                                          example: '*'
                                    httpPost:
                                      type: object
                                      properties:
                                        channel:
                                          type: string
                                          example: http
                                        command:
                                          type: string
                                          example: notify
                                        url:
                                          type: string
                                          example: http://localhost:1080/demo
                                    logEvent:
                                      type: object
                                      properties:
                                        channel:
                                          type: string
                                          example: logger
                                        command:
                                          type: string
                                          example: notify
                                example:
                                  - logEvent:
                                      channel: logger
                                      command: notify
                                  - amqpPublish:
                                      channel: amqp
                                      command: publish
                                      exchange: demo-exchange
                                      routing-key: '*'
                                  - httpPost:
                                      channel: http
                                      command: notify
                                      url: http://localhost:1080/demo
                              when:
                                type: object
                                properties:
                                  aql:
                                    type: string
                                    example: >-
                                      select e/ehr_id/value as ehr_id,
                                      c/uid/value as composition_id,
                                      o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value
                                      as diastolic from EHR e contains
                                      OBSERVATION
                                      o[openEHR-EHR-OBSERVATION.sample_blood_pressure.v1]
                                      AND COMPOSITION c where
                                      o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude
                                      > 140
                      example:
                        - diastolic:
                            then:
                              - logEvent:
                                  channel: logger
                                  command: notify
                              - amqpPublish:
                                  channel: amqp
                                  command: publish
                                  exchange: demo-exchange
                                  routing-key: '*'
                              - httpPost:
                                  channel: http
                                  command: notify
                                  url: http://localhost:1080/demo
                            when:
                              aql: >-
                                select e/ehr_id/value as ehr_id, c/uid/value as
                                composition_id,
                                o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value
                                as diastolic from EHR e contains OBSERVATION
                                o[openEHR-EHR-OBSERVATION.sample_blood_pressure.v1]
                                AND COMPOSITION c where
                                o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude
                                > 140
                id:
                  type: string
                  example: simple_test_trigger_bp.v1
                state:
                  type: string
                  example: active
            examples:
              Activate Event Trigger:
                value:
                  author:
                    date: '2022-08-25T12:40:26.945Z'
                    email: alexandru.vidrean.ext@vitagroup.ag
                    name: Alexandru Vidrean
                    organisation: VitaGroup AG
                  definition:
                    mode: AFTER
                    rules:
                      - diastolic:
                          then:
                            - logEvent:
                                channel: logger
                                command: notify
                            - amqpPublish:
                                channel: amqp
                                command: publish
                                exchange: demo-exchange
                                routing-key: '*'
                            - httpPost:
                                channel: http
                                command: notify
                                url: http://localhost:1080/demo
                          when:
                            aql: >-
                              select e/ehr_id/value as ehr_id, c/uid/value as
                              composition_id,
                              o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value
                              as diastolic from EHR e contains OBSERVATION
                              o[openEHR-EHR-OBSERVATION.sample_blood_pressure.v1]
                              AND COMPOSITION c where
                              o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/magnitude
                              > 140
                  id: simple_test_trigger_bp.v1
                  state: active
      responses:
        '200':
          description: ''
    parameters:
      - name: event_trigger_uuid
        in: path
        required: true
        schema:
          type: string
          example: 06345e0e-3b79-4dba-8c99-c0e632d328bf
  /plugin/event-trigger/service/{event_trigger_id}:
    get:
      tags:
        - Event Trigger
      summary: Get Event Trigger
      description: Get Event Trigger
      operationId: getEventTrigger
      responses:
        '200':
          description: ''
    delete:
      tags:
        - Event Trigger
      summary: Delete Event Trigger
      description: Delete Event Trigger
      operationId: deleteEventTrigger
      responses:
        '200':
          description: ''
    parameters:
      - name: event_trigger_id
        in: path
        required: true
        schema:
          type: string
          example: c1246a5c-07e8-4601-a5b5-7eab501d3bd9
  /plugin/multi-tenant/service:
    get:
      tags:
        - Multi tenant
      summary: Get tenants
      description: Get tenants
      operationId: getTenants
      responses:
        '200':
          description: ''
    post:
      tags:
        - Multi tenant
      summary: Store tenant
      description: Store tenant
      operationId: storeTenant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantId:
                  type: string
                  example: '{{$guid}}'
                tenantName:
                  type: string
                  example: cdr-core-sanity-check
                tenantProperties:
                  type: object
                  properties:
                    client-id:
                      type: string
                      example: HIP-CDR-EHRbase-Service
                    host:
                      type: string
                      example: '{{keycloakUrl}}'
                    realm:
                      type: string
                      example: cdr-core-sanity-check
            examples:
              Store tenant:
                value:
                  tenantId: '{{$guid}}'
                  tenantName: cdr-core-sanity-check
                  tenantProperties:
                    client-id: HIP-CDR-EHRbase-Service
                    host: '{{keycloakUrl}}'
                    realm: cdr-core-sanity-check
      responses:
        '200':
          description: ''
  /plugin/transaction-management/ehr/{ehr_id}/contribution/{contribution_id}/rollback:
    post:
      tags:
        - Compensation
      summary: Rollback
      description: Rollback
      operationId: rollback
      responses:
        '200':
          description: ''
    parameters:
      - name: ehr_id
        in: path
        required: true
        schema:
          type: string
          example: '{{ehrId}}'
      - name: contribution_id
        in: path
        required: true
        schema:
          type: string
          example: c25c5c9c-0463-4ce3-9753-fb6732827859
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Event Trigger
  - name: Multi tenant
  - name: Compensation
