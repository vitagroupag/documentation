openapi: 3.0.3
info:
  title: EHR API
  version: latest
  description: >+
    <table>
        <colgroup>
            <col style="width: 20%;">
            <col style="width: 80%;">
        </colgroup>
        <thead>
        <tr>
            <th colspan="2">© 2018 - 2023 The openEHR Foundation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td colspan="2">
                The <a href="https://www.openEHR.org" target="_blank" rel="noopener">openEHR Foundation</a> is an independent, non-profit foundation, facilitating the sharing of health records by consumers and clinicians via open specifications, clinical models and open platform implementations.
            </td>
        </tr>
        <tr>
            <td><strong>Licence</strong></td>
            <td><span class="image"><img src="https://specifications.openehr.org/images/cc-by-nd-88x31.png" alt="image"></span> Creative Commons Attribution-NoDerivs 3.0 Unported.
                <a href="https://creativecommons.org/licenses/by-nd/3.0/" class="bare">https://creativecommons.org/licenses/by-nd/3.0/</a>
            </td>
        </tr>
        <tr>
            <td><strong>Support</strong></td>
            <td>Issues: <a href="https://specifications.openehr.org/components/ITS/open_issues" target="_blank" rel="noopener">Problem Reports</a><br>
                Web: <a href="https://specifications.openehr.org" target="_blank" rel="noopener">specifications.openEHR.org</a>
            </td>
        </tr>
        </tbody>
    </table>


    ### Amendment Record


    <table>
        <colgroup>
            <col style="width: 9%;">
            <col style="width: 55%;">
            <col style="width: 18%;">
            <col style="width: 18%;">
        </colgroup>
        <thead>
        <tr>
            <th>Issue</th>
            <th>Details</th>
            <th>Raiser, Implementer</th>
            <th>Completed</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/latest" target="_blank" rel="noopener">Release-1.0.3</a></th>
        </tr>
        <tr>
            <td>5.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-66" target="_blank" rel="noopener">SPECITS-66</a>:
                Migrate REST API specs to OpenAPI Specification</td>
            <td>S Iancu</td>
            <td>19 Dec 2022</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.2" target="_blank" rel="noopener">Release-1.0.2</a></th>
        </tr>
        <tr>
            <td>4.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-41" target="_blank" rel="noopener">SPECITS-41</a>:
                Add double quotes to ETag and If-Match headers</td>
            <td>S Iancu</td>
            <td>21 Mar 2021</td>
        </tr>
        <tr>
            <td>4.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-49" target="_blank" rel="noopener">SPECITS-49</a>:
                Describing Resource Identification; add clarification over getting COMPOSITIONs by with `version_uid` vs `versioned_object_uid`</td>
            <td>J Smolka, M Polajnar, S Iancu</td>
            <td>08 Mar 2021</td>
        </tr>
        <tr>
            <td>4.0</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-52" target="_blank" rel="noopener">SPECITS-52</a>:
                Fix wrong example on revision history of the VERSIONED_COMPOSITION and VERSIONED_EHR_STATUS</td>
            <td>J Smolka, S Iancu</td>
            <td>06 Mar 2021</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.1" target="_blank" rel="noopener">Release-1.0.1</a></th>
        </tr>
        <tr>
            <td>3.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-38" target="_blank" rel="noopener">SPECITS-38</a>:
                Fix response status code for semantic validation errors (fixes also
                <a href="https://specifications.openehr.org/tickets/SPECPR-298" target="_blank" rel="noopener">SPECPR-298</a>)</td>
            <td>P Pazos, S Iancu</td>
            <td>01 Oct 2019</td>
        </tr>
        <tr>
            <td>3.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-40" target="_blank" rel="noopener">SPECITS-40</a>:
                Fix and improve documentation on EHR (fixes also
                <a href="https://specifications.openehr.org/tickets/SPECPR-312" target="_blank" rel="noopener">SPECPR-312</a>)</td>
            <td>P Pazos, S Iancu</td>
            <td>28 Sep 2019</td>
        </tr>
        <tr>
            <td>3.0</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-32" target="_blank" rel="noopener">SPECITS-32</a>: Fix typos and minor documentary errors (fixes
                <a href="https://specifications.openehr.org/tickets/SPECPR-252" target="_blank" rel="noopener">SPECPR-253</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-255" target="_blank" rel="noopener">SPECPR-255</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-298" target="_blank" rel="noopener">SPECPR-298</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-333" target="_blank" rel="noopener">SPECPR-333</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-337" target="_blank" rel="noopener">SPECPR-337</a>)</td>
            <td>J Smolka, P Pazos, E Sundvall, T Beale, S Iancu</td>
            <td>1 Sep 2019</td>
        </tr>
        <tr>
            <td>2.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-24" target="_blank" rel="noopener">SPECITS-24</a>: Added changelog</td>
            <td>J Smolka, S Iancu</td>
            <td>12 May 2019</td>
        </tr>
        <tr>
            <td></td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-25" target="_blank" rel="noopener">SPECITS-25</a>,
                <a href="https://specifications.openehr.org/tickets/SPECITS-29" target="_blank" rel="noopener">SPECITS-29</a>: Change layout and structure</td>
            <td>J Smolka, S Iancu</td>
            <td>12 May 2019</td>
        </tr>
        <tr>
            <td>2.1</td>
            <td>Update links to new openEHR specifications website</td>
            <td>S Iancu</td>
            <td>16 Dec 2018</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.0" target="_blank" rel="noopener">Release-1.0.0</a></th>
        </tr>
        </tbody>
    </table>



    # Intro



    ## Acknowledgements


    ### Editor

    - Sebastian Iancu, Architect, Code24, Netherlands


    ### Contributors

    This specification benefited from wide formal and informal input from the
    openEHR and wider health informatics community. The openEHR Foundation would
    like to recognise the following people for their contributions.

    - Birger Haarbrandt, MSc, Peter L. Reichertz Institut for Medical
    Informatics (PLRI), Germany

    - Bjørn Næss, DIPS, Norway

    - Bostjan Lah, Senior Architect, Better, Slovenia

    - Erik Sundvall, Information Architect at Karolinska University Hospital,
    Sweden

    - Heath Frankel, Ocean Informatics, Australia

    - Ian McNicoll MD, FreshEHR, UK

    - Jake Smolka, Software Engineer, Better, Slovenia

    - Matija Polajnar, PhD, Software Engineer, Better, Slovenia

    - Pablo Pazos Gutierrez, Senior engineer, CaboLabs, Uruguay

    - Rong Chen MD, PhD, Cambio Healthcare Systems, Sweden

    - Sebastian Iancu, Architect, Code24, Netherlands

    - Seref Arikan, MEcon, Ocean Informatics UK, Centre for Health Informatics
    and Multi-professional Education (CHIME) UK

    - Thomas Beale, Ars Semantica UK, openEHR Foundation Management Board


    ### Trademarks

    - 'openEHR' is a trademark of the [openEHR
    Foundation](https://www.openEHR.org)

    - 'OpenAPI' is a trademark of the [The Linux
    Foundation](https://www.linuxfoundation.org)



    ## Preface


    ### Purpose


    This specification describes service endpoints, resources and operations as
    well as details of requests and responses that interacts with EHR openEHR
    API in a RESTful manner.


    ### Related Documents


    Prerequisite documents for reading this document include:


    - The [EHR Information
    Model](https://specifications.openehr.org/releases/RM/latest/ehr.html#_the_ehr_information_model)


    Related documents include:


    - The [openEHR Architecture
    Overview](https://specifications.openehr.org/releases/BASE/latest/architecture_overview.html)

    - The [openEHR Global Class
    Index](https://specifications.openehr.org/classes)

    - The [XML-Schemas
    (XSD)](https://specifications.openehr.org/releases/ITS-XML/latest)

    - The
    [JSON-Schemas](https://specifications.openehr.org/releases/ITS-JSON/latest)
    and [Simplified Data Template (SDT)](simplified_data_template.html)

    - The [openEHR Platform Abstract Service
    Model](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html)


    ### Status


    This specification is in the `STABLE` state, and can be downloaded as
    [OpenAPI specification](https://spec.openapis.org/oas/v3.0.3) file (in YAML
    format) [for validation](computable/OAS/ehr-validation.openapi.yaml), or
    [for code generators](computable/OAS/ehr-codegen.openapi.yaml).

    Users are encouraged to comment on and/or advise on these paragraphs as well
    as the main content.


    The development version of this document can be found at
    <https://specifications.openehr.org/releases/ITS-REST/latest/ehr.html>.


    ### Feedback


    Feedback may be provided on the [Implementation Technology Specifications
    forum](https://discourse.openehr.org/c/specifications/its/41).


    Issues may be raised on the [specifications Problem Report
    tracker](https://openehr.atlassian.net/browse/SPECPR).


    To see changes made due to previously reported issues, see the [ITS
    component Change Request
    tracker](https://specifications.openehr.org/components/ITS/history).


    ### Conformance


    tbd.

  contact:
    name: Specifications Editorial Committee openEHR
    url: https://specifications.openehr.org/
    email: info@openehr.org
  license:
    name: Creative Commons Attribution-NoDerivs 3.0 Unported
    url: https://creativecommons.org/licenses/by-nd/3.0/
  x-status: STABLE
  x-spec: ehr
  x-logo:
    url: ''
servers:
  - url: https://{baseUrl}/v1
    description: An example openEHR server URL.
    variables:
      baseUrl:
        default: openEHRSys.example.com
        description: >-
          The (example) server base URL prefix providing openEHR services. This
          may contain server name, port and base path prefix.
paths:
  /ehr:
    get:
      tags:
        - EHR
      parameters:
        - $ref: '#/components/parameters/subject_id'
        - $ref: '#/components/parameters/subject_namespace'
      responses:
        '200':
          $ref: '#/components/responses/200_EHR'
        '404':
          $ref: '#/components/responses/404_EHR_subject'
      operationId: ehr_get_by_subject
      summary: Get EHR by subject id
      description: >
        Retrieve the EHR with the specified `subject_id` and
        `subject_namespace`.


        These subject parameters will be matched against EHR's
        EHR_STATUS.subject.external_ref.id.value and 

        EHR_STATUS.subject.external_ref.namespace values.
    post:
      requestBody:
        description: >
          An EHR_STATUS resource MAY be also supplied by the client as the
          request body.
        content:
          application/json:
            schema:
              {}
        required: false
      tags:
        - EHR
      parameters:
        - $ref: '#/components/parameters/Prefer'
      responses:
        '201':
          $ref: '#/components/responses/201_EHR'
        '400':
          $ref: '#/components/responses/400'
        '409':
          $ref: '#/components/responses/409_EHR'
      operationId: ehr_create
      summary: Create EHR
      description: >
        Create a new `EHR` with an auto-generated identifier.


        An EHR_STATUS resource needs to be always created and committed in the
        new EHR.

        This resource MAY be also supplied by the client as the request body. 

        If not supplied, a default EHR_STATUS will be used by the service with
        following attributes:
          - `is_queryable`: true
          - `is_modifiable`: true
          - `subject`: a PARTY_SELF object

        All other required EHR attributes and resources will be automatically
        created as needed by the [EHR creation
        semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).
  /ehr/{ehr_id}:
    get:
      tags:
        - EHR
      parameters:
        - $ref: '#/components/parameters/ehr_id'
      responses:
        '200':
          $ref: '#/components/responses/200_EHR'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
      operationId: ehr_get_by_id
      summary: Get EHR by id
      description: |
        Retrieve the EHR with the specified `ehr_id`.
    put:
      requestBody:
        description: >
          An EHR_STATUS resource MAY be also supplied by the client as the
          request body.
        content:
          application/json:
            schema:
              {}
        required: false
      tags:
        - EHR
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/Prefer'
      responses:
        '201':
          $ref: '#/components/responses/201_EHR'
        '400':
          $ref: '#/components/responses/400'
        '409':
          $ref: '#/components/responses/409_EHR_with_id'
      operationId: ehr_create_with_id
      summary: Create EHR with id
      description: >
        Create a new EHR with the specified `ehr_id` identifier.


        The value of the `ehr_id` unique identifier MUST be valid
        [HIER_OBJECT_ID](https://specifications.openehr.org/releases/BASE/latest/base_types.html#_hier_object_id_class)
        value. 

        It is strongly RECOMMENDED that an UUID always be used for this.


        An EHR_STATUS resource needs to be always created and committed in the
        new EHR.

        This resource MAY be also supplied by the client as the request body. 

        If not supplied, a default EHR_STATUS will be used by the service with
        following attributes:
          - `is_queryable`: true
          - `is_modifiable`: true
          - `subject`: a PARTY_SELF object

        All other required EHR attributes and resources will be automatically
        created as needed by the [EHR creation
        semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).
  /ehr/{ehr_id}/ehr_status/{version_uid}:
    get:
      tags:
        - EHR_STATUS
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/version_uid'
      responses:
        '200':
          $ref: '#/components/responses/200_EHR_STATUS_retrieved'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_version_uid'
      operationId: ehr_status_get_by_version_id
      summary: Get EHR_STATUS by version id
      description: >
        Retrieves a particular version of the EHR_STATUS identified by
        `version_uid` and associated with the EHR identified by `ehr_id`.
  /ehr/{ehr_id}/ehr_status:
    get:
      tags:
        - EHR_STATUS
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/version_at_time'
      responses:
        '200':
          $ref: '#/components/responses/200_EHR_STATUS_retrieved'
        '400':
          $ref: '#/components/responses/400_invalid_version_at_time'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_no_version_at_time'
      operationId: ehr_status_get_at_time
      summary: Get EHR_STATUS at time
      description: >
        Retrieves a version of the EHR_STATUS associated with the EHR identified
        by `ehr_id`.


        If `version_at_time` is supplied, retrieves the version extant _at
        specified time_, otherwise retrieves the _latest_ EHR_STATUS version.
    put:
      requestBody:
        description: |
          The new EHR_STATUS.
        content:
          application/json:
            schema:
              {}
        required: true
      tags:
        - EHR_STATUS
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/If-Match'
        - $ref: '#/components/parameters/Prefer'
      responses:
        '200':
          $ref: '#/components/responses/200_EHR_STATUS_updated'
        '204':
          $ref: '#/components/responses/204_EHR_STATUS'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
        '412':
          $ref: '#/components/responses/412_EHR_STATUS'
      operationId: ehr_status_update
      summary: Update EHR_STATUS
      description: >
        Updates EHR_STATUS associated with the EHR identified by `ehr_id`.


        The existing latest `version_uid` of EHR_STATUS resource (i.e. the
        `preceding_version_uid`) must be specified in the `If-Match` header.


        The response will contain the updated EHR_STATUS resource when the
        `Prefer` header has a value of `return=representation`.
  /ehr/{ehr_id}/versioned_ehr_status:
    get:
      tags:
        - EHR_STATUS
      parameters:
        - $ref: '#/components/parameters/ehr_id'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSIONED_EHR_STATUS'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
      operationId: versioned_ehr_status_get
      summary: Get versioned EHR_STATUS
      description: >
        Retrieves a VERSIONED_EHR_STATUS associated with an EHR identified by
        `ehr_id`.
  /ehr/{ehr_id}/versioned_ehr_status/revision_history:
    get:
      tags:
        - EHR_STATUS
      parameters:
        - $ref: '#/components/parameters/ehr_id'
      responses:
        '200':
          $ref: '#/components/responses/200_REVISION_HISTORY'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
      operationId: versioned_ehr_status_revision_history
      summary: Get versioned EHR_STATUS revision history
      description: >
        Retrieves revision history of the VERSIONED_EHR_STATUS associated with
        the EHR identified by `ehr_id`.
  /ehr/{ehr_id}/versioned_ehr_status/version:
    get:
      tags:
        - EHR_STATUS
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/version_at_time'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSION_at_time'
        '400':
          $ref: '#/components/responses/400_invalid_version_at_time'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_no_version_at_time'
      operationId: versioned_ehr_status_version_get_at_time
      summary: Get versioned EHR_STATUS version at time
      description: >
        Retrieves a VERSION from the VERSIONED_EHR_STATUS associated with the
        EHR identified by `ehr_id`.


        If `version_at_time` is supplied, retrieves the VERSION extant _at
        specified time_, otherwise retrieves the _latest_ VERSION.
  /ehr/{ehr_id}/versioned_ehr_status/version/{version_uid}:
    get:
      tags:
        - EHR_STATUS
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/version_uid'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSION'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_version_uid'
      operationId: versioned_ehr_status_version_get_by_id
      summary: Get versioned EHR_STATUS version by id
      description: >
        Retrieves a VERSION identified by `version_uid` of an EHR_STATUS
        associated with the EHR identified by `ehr_id`.
  /ehr/{ehr_id}/composition:
    post:
      requestBody:
        description: |
          The COMPOSITION.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        required: true
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/Prefer'
      responses:
        '201':
          $ref: '#/components/responses/201_COMPOSITION'
        '400':
          $ref: '#/components/responses/400_COMPOSITION'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
        '422':
          $ref: '#/components/responses/422_COMPOSITION'
      operationId: composition_create
      summary: Create COMPOSITION
      description: >
        Creates the first version of a new COMPOSITION in the EHR identified by
        `ehr_id`.
  /ehr/{ehr_id}/composition/{uid_based_id}:
    get:
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/uid_based_id'
        - $ref: '#/components/parameters/version_at_time'
      responses:
        '200':
          $ref: '#/components/responses/200_COMPOSITION_retrieved'
        '204':
          $ref: '#/components/responses/204_because_deleted_at_time'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_no_version_at_time'
      operationId: composition_get
      summary: Get COMPOSITION
      description: >
        Retrieves a version of the COMPOSITION identified by `uid_based_id` and
        associated with the EHR identified by `ehr_id`.


        The `uid_based_id` can take a form of an OBJECT_VERSION_ID identifier
        taken from VERSION.uid.value (i.e. a `version_uid`), or a form of a
        HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a
        `versioned_object_uid`).

        The former is used to retrieve a specific known version of the
        COMPOSITION (e.g. one identified by
        `8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1`),
        whereas the later (e.g. an identifier like
        `8849182c-82ad-4088-a07f-48ead4180515`) is be used to retrieve a version
        from the version container whenever the _version_tree_id_ is unknown or
        irrelevant (such as when most recent version is requested).


        When the `uid_based_id` has the form of a HIER_OBJECT_ID, if the
        `version_at_time` is supplied, retrieves the version extant _at
        specified time_, otherwise retrieves the _latest_ COMPOSITION version.


        See [Resource
        identification](overview.html#tag/Resources/Resource-identification) for
        more details about the identifiers usage and meaning.
    put:
      requestBody:
        description: |
          The new COMPOSITION.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        required: true
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/uid_based_id_as_versioned_object_uid'
        - $ref: '#/components/parameters/If-Match'
        - $ref: '#/components/parameters/Prefer'
      responses:
        '200':
          $ref: '#/components/responses/200_COMPOSITION_updated'
        '400':
          $ref: '#/components/responses/400_COMPOSITION'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_uid_based_id'
        '412':
          $ref: '#/components/responses/412_COMPOSITION'
        '422':
          $ref: '#/components/responses/422_COMPOSITION'
      operationId: composition_update
      summary: Update COMPOSITION
      description: >
        Updates COMPOSITION identified by `uid_based_id` and associated with the
        EHR identified by `ehr_id`.


        The `uid_based_id` can take only a form of an HIER_OBJECT_ID identifier
        taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).


        If the request body already contains a COMPOSITION.uid.value, it must
        match the `uid_based_id` in the URL. 


        The existing latest `version_uid` of COMPOSITION resource (i.e. the
        `preceding_version_uid`) must be specified in the `If-Match` header.
    delete:
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/uid_based_id_as_version_uid'
      responses:
        '204':
          $ref: '#/components/responses/204_COMPOSITION_deleted'
        '400':
          $ref: '#/components/responses/400_already_deleted'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_uid_based_id'
        '409':
          $ref: '#/components/responses/409_COMPOSITION_with_uid_based_id'
      operationId: composition_delete
      summary: Delete COMPOSITION
      description: >
        Deletes the COMPOSITION identified by `uid_based_id` and associated with
        the EHR identified by `ehr_id`.


        The `uid_based_id` MUST be in a form of an OBJECT_VERSION_ID identifier
        taken from the last (most recent) VERSION.uid.value, representing the
        `preceding_version_uid` to be deleted.
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}:
    get:
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/versioned_object_uid_COMPOSITION'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSIONED_COMPOSITION'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_versioned_object_uid'
      operationId: versioned_composition_get
      summary: Get versioned COMPOSITION
      description: >
        Retrieves a VERSIONED_COMPOSITION identified by `versioned_object_uid`
        and associated with the EHR identified by `ehr_id`.
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/revision_history:
    get:
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/versioned_object_uid_COMPOSITION'
      responses:
        '200':
          $ref: '#/components/responses/200_REVISION_HISTORY'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id_or_versioned_object_uid'
      operationId: versioned_composition_revision_history
      summary: Get versioned COMPOSITION revision history
      description: >
        Retrieves revision history of the VERSIONED_COMPOSITION identified by
        `versioned_object_uid` and associated with the EHR identified by
        `ehr_id`.
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version:
    get:
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/versioned_object_uid_COMPOSITION'
        - $ref: '#/components/parameters/version_at_time'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSION_of_COMPOSITION_at_time'
        '404':
          $ref: >-
            #/components/responses/404_unknown_ehr_id_or_versioned_object_uid_or_no_version_at_time
      operationId: versioned_composition_version_get_at_time
      summary: Get versioned COMPOSITION version at time
      description: >
        Retrieves a VERSION from the VERSIONED_COMPOSITION identified by
        `versioned_object_uid` and associated with the EHR identified by
        `ehr_id`.


        If `version_at_time` is supplied, retrieves the VERSION extant _at
        specified time_, otherwise retrieves the _latest_ VERSION.
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version/{version_uid}:
    get:
      tags:
        - COMPOSITION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/versioned_object_uid_COMPOSITION'
        - $ref: '#/components/parameters/version_uid_COMPOSITION'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSION'
        '404':
          $ref: >-
            #/components/responses/404_unknown_ehr_id_or_versioned_object_uid_or_version_uid
      operationId: versioned_composition_version_get_by_id
      summary: Get versioned COMPOSITION version by id
      description: >
        Retrieves a VERSION identified by `version_uid` of a
        VERSIONED_COMPOSITION identified by `versioned_object_uid` and
        associated with the EHR identified by `ehr_id`.
  /ehr/{ehr_id}/directory:
    get:
      tags:
        - DIRECTORY
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/version_at_time'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          $ref: '#/components/responses/200_FOLDER_retrieved'
        '204':
          $ref: '#/components/responses/204_because_deleted_at_time'
        '404':
          $ref: >-
            #/components/responses/404_directory_unknown_ehr_id_or_no_version_at_time_or_no_path
      operationId: directory_get_at_time
      summary: Get folder in directory version at time
      description: >
        Retrieves the version of the directory FOLDER associated with the EHR
        identified by `ehr_id`. 

        If `version_at_time` is supplied, retrieves the version extant _at
        specified time_, otherwise retrieves the _latest_ directory FOLDER
        version. 


        If `path` is supplied, retrieves from the directory only the sub-FOLDER
        that is associated with that path.
    put:
      requestBody:
        description: |
          The new directory.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      tags:
        - DIRECTORY
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/If-Match'
        - $ref: '#/components/parameters/Prefer'
      responses:
        '200':
          $ref: '#/components/responses/200_directory_updated'
        '204':
          $ref: '#/components/responses/204_directory_updated'
        '400':
          $ref: '#/components/responses/400_FOLDER'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
        '412':
          $ref: '#/components/responses/412_directory'
      operationId: directory_update
      summary: Update directory
      description: >
        Updates directory FOLDER associated with the EHR identified by `ehr_id`.


        The existing latest `version_uid` of directory FOLDER resource (i.e. the
        `preceding_version_uid`) must be specified in the `If-Match` header.
    post:
      requestBody:
        description: |
          The directory.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      tags:
        - DIRECTORY
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/Prefer'
      responses:
        '201':
          $ref: '#/components/responses/201_directory'
        '400':
          $ref: '#/components/responses/400_FOLDER'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
      operationId: directory_create
      summary: Create directory
      description: >
        Creates a new directory FOLDER associated with the EHR identified by
        `ehr_id`.
    delete:
      tags:
        - DIRECTORY
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/If-Match'
      responses:
        '204':
          $ref: '#/components/responses/204_because_deleted'
        '400':
          $ref: '#/components/responses/400_invalid_ehr_id'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
        '412':
          $ref: '#/components/responses/412_directory'
      operationId: directory_delete
      summary: Delete directory
      description: >
        Deletes directory FOLDER associated with the EHR identified by `ehr_id`.


        The existing latest `version_uid` of directory FOLDER resource (i.e. the
        `preceding_version_uid`) must be specified in the `If-Match` header.
  /ehr/{ehr_id}/directory/{version_uid}:
    get:
      tags:
        - DIRECTORY
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/version_uid'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          $ref: '#/components/responses/200_FOLDER_retrieved'
        '404':
          $ref: >-
            #/components/responses/404_directory_unknown_ehr_id_or_no_version_uid_or_no_path
      operationId: directory_get_by_version_id
      summary: Get folder in directory version
      description: >
        Retrieves a particular version of the directory FOLDER identified by
        `version_uid` and associated with the EHR identified by `ehr_id`.


        If `path` is supplied, retrieves from the directory only the sub-FOLDER
        that is associated with that path.
  /ehr/{ehr_id}/contribution:
    post:
      requestBody:
        description: |
          The CONTRIBUTION.
        content:
          application/json:
            schema:
              {}
        required: true
      tags:
        - CONTRIBUTION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/Prefer'
      responses:
        '201':
          $ref: '#/components/responses/201_CONTRIBUTION'
        '400':
          $ref: '#/components/responses/400_CONTRIBUTION'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
        '409':
          $ref: '#/components/responses/409'
      operationId: contribution_create
      summary: Create CONTRIBUTION
      description: >
        We will use the relaxed CONTRIBUTION with the following optional
        attributes:
          - `uid`: when provided, it will be accepted in case is not in-use, otherwise error will be returned
          - `audit.time_committed`: server will always set it
          - `audit.system_id`: when provided, it will be validated
  /ehr/{ehr_id}/contribution/{contribution_uid}:
    get:
      tags:
        - CONTRIBUTION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/contribution_uid'
      responses:
        '200':
          $ref: '#/components/responses/200_CONTRIBUTION'
        '404':
          $ref: '#/components/responses/404_CONTRIBUTION'
      operationId: contribution_get
      summary: Get CONTRIBUTION by id
      description: >
        Retrieves a CONTRIBUTION identified by `contribution_uid` and associated
        with the EHR identified by `ehr_id`.
components:
  schemas:
    Composition:
      title: COMPOSITION
      description: A COMPOSITION resource
      required:
        - language
        - territory
        - category
        - context
        - composer
        - content
      type: object
      allOf:
        - {}
      properties:
        _type:
          default: COMPOSITION
          type: string
        language:
          {}
        territory:
          {}
        category:
          {}
        context:
          {}
        composer:
          {}
        content:
          type: array
          items:
            {}
      example:
        archetype_node_id: openEHR-EHR-COMPOSITION.encounter.v1
        name:
          value: Vital Signs
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        archetype_details:
          archetype_id:
            value: openEHR-EHR-COMPOSITION.encounter.v1
          template_id:
            value: Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747
          rm_version: 1.0.2
        language:
          terminology_id:
            value: ISO_639-1
          code_string: en
        territory:
          terminology_id:
            value: ISO_3166-1
          code_string: NL
        category:
          value: event
          defining_code:
            terminology_id:
              value: openehr
            code_string: '433'
        composer:
          _type: PARTY_IDENTIFIED
          external_ref:
            id:
              _type: GENERIC_ID
              value: 16b74749-e6aa-4945-b760-b42bdc07098a
              scheme: pid
            namespace: openEHRSys.example.com
            type: PERSON
          name: A name
        context:
          start_time:
            value: '2014-11-18T09:50:35.000+01:00'
          setting:
            value: other care
            defining_code:
              terminology_id:
                value: openehr
              code_string: '238'
        content: []
      x-discriminator-value: COMPOSITION
    Folder:
      title: FOLDER
      description: A FOLDER resource
      type: object
      allOf:
        - {}
      properties:
        _type:
          default: FOLDER
          type: string
        items:
          type: array
          items:
            {}
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
        details:
          {}
      example:
        archetype_node_id: openEHR-EHR-FOLDER.directory.v1
        name:
          value: Directory
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        items: []
        folders: []
      x-discriminator-value: FOLDER
    Contribution:
      title: CONTRIBUTION
      description: A CONTRIBUTION resource
      required:
        - uid
        - versions
        - audit
      type: object
      properties:
        uid:
          {}
        versions:
          type: array
          items:
            {}
        audit:
          {}
      example:
        uid:
          value: 0826851c-c4c2-4d61-92b9-410fb8275ff0
        versions:
          - _type: OBJECT_REF
            id:
              _type: OBJECT_VERSION_ID
              value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
            namespace: local
            type: COMPOSITION
          - _type: OBJECT_REF
            id:
              _type: OBJECT_VERSION_ID
              value: abcdefgh-1323-42bc-b7f8-787f3660a0ba::openEHRSys.example.com::1
            namespace: local
            type: FOLDER
        audit:
          system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
          committer:
            _type: PARTY_IDENTIFIED
            name: A user name
          time_committed:
            value: '2017-08-15T10:37:15.422+02:00'
          change_type:
            value: creation
            defining_code:
              terminology_id:
                value: openehr
              code_string: '249'
          description:
            value: Description text
  responses:
    '400':
      description: >
        `400 Bad Request` is returned when the request URL or body (if provided)
        could not be parsed or has invalid content.
    '409':
      description: >
        `409 Conflict` is returned when a resource with same identifier(s)
        already exists.
    200_EHR:
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested EHR resource is successfully
        retrieved.
    404_EHR_subject:
      description: >
        `404 Not Found` is returned when an EHR with supplied subject parameters
        does not exist.
    201_EHR:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_EHR'
        Location:
          $ref: '#/components/headers/Location_EHR'
      content:
        application/json:
          schema:
            {}
      description: >
        `201 Created` is returned when the EHR has been successfully created. 

        The new EHR resource is returned in the body when the request's `Prefer`
        header value is `return=representation`, otherwise only headers are
        returned.
    409_EHR:
      description: >
        `409 Conflict` Unable to create a new EHR due to a conflict with an
        already existing EHR with the same subject id, namespace pair, whenever
        EHR_STATUS is supplied.
    404_unknown_ehr_id:
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
    409_EHR_with_id:
      description: >
        `409 Conflict` Unable to create a new EHR due to a conflict with an
        already existing EHR. 

        Can happen when the supplied `ehr_id` is already used by an existing
        EHR.
    200_EHR_STATUS_retrieved:
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested EHR_STATUS is successfully
        retrieved.
    404_unknown_ehr_id_or_version_uid:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when the `version_uid` does not exist.
    400_invalid_version_at_time:
      description: >
        `400 Bad Request` is returned when the request has invalid content such
        as an invalid `version_at_time` format.
    404_unknown_ehr_id_or_no_version_at_time:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when a version of the resource identified by the request parameters (at
        specified `version_at_time`) does not exist.
    200_EHR_STATUS_updated:
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the EHR_STATUS is successfully updated, and
        the updated resource is returned in the body when `Prefer` header value
        is `return=representation`.
    204_EHR_STATUS:
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
      description: >
        `204 No Content` is returned when the `Prefer` header is missing or is
        set to `return=minimal`.
    412_EHR_STATUS:
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
      description: >
        `412 Precondition Failed` is returned when `If-Match` request header
        doesn't match the latest version on the service side.

        Returns also latest `version_uid` in the `Location` and `ETag` headers.
    200_VERSIONED_EHR_STATUS:
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested VERSIONED_EHR_STATUS is
        successfully retrieved.
    200_REVISION_HISTORY:
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested REVISION_HISTORY is successfully
        retrieved.
    200_VERSION_at_time:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_VERSION'
        Location:
          $ref: '#/components/headers/Location_VERSIONED_EHR_STATUS_VERSION'
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested VERSION is successfully
        retrieved.
    200_VERSION:
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested VERSION is successfully
        retrieved.
    201_COMPOSITION:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Composition'
      description: >
        `201 Created` is returned when the COMPOSITION was created. 

        Content body is only returned when `Prefer` header has
        `return=representation`, otherwise only headers are returned.
    400_COMPOSITION:
      content:
        application/json:
          schema:
            {}
      description: >
        `400 Bad Request` is returned when the request URL or body (if provided)
        could not be parsed or has invalid content (e.g. invalid `ehr_id`, or
        either the body of the request could not be read, or could not be
        converted to a valid COMPOSITION object).
    422_COMPOSITION:
      description: >
        `422 Unprocessable Entity` is returned when the content could be
        converted to a COMPOSITION, but there are semantic validation errors,
        such as the underlying template is not known or is not validating the
        supplied COMPOSITION.
    200_COMPOSITION_retrieved:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Composition'
      description: >
        `200 OK` is returned when the requested COMPOSITION is successfully
        retrieved.
    204_because_deleted_at_time:
      description: >
        `204 No Content` is returned when the resource identified by the request
        parameters (at specified `version_at_time`) time has been deleted.
    200_COMPOSITION_updated:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Composition'
      description: >
        `200 OK` is returned when the COMPOSITION is successfully updated and
        the updated resource is returned in the body when `Prefer` header value
        is `return=representation`.
    404_unknown_ehr_id_or_uid_based_id:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when the `uid_based_id` does not exist.
    412_COMPOSITION:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      description: >
        `412 Precondition Failed` is returned when `If-Match` request header
        doesn't match the latest version on the service side.

        Returns also latest `version_uid` in the `Location` and `ETag` headers.
    204_COMPOSITION_deleted:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      description: |
        `204 No Content` is returned when COMPOSITION was deleted.
    400_already_deleted:
      description: >
        `400 Bad Request` is returned when the request URL could not be parsed
        (i.e. invalid format of request parameters) or when the resource
        identified by the request parameters is already deleted.
    409_COMPOSITION_with_uid_based_id:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      description: >
        `409 Conflict` is returned when supplied `uid_based_id` doesn't match
        the latest version.

        Returns also latest version in the `Location` and `ETag` headers.
    200_VERSIONED_COMPOSITION:
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested VERSIONED_COMPOSITION is
        successfully retrieved.
    404_unknown_ehr_id_or_versioned_object_uid:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when the `versioned_object_uid` does not exist.
    200_VERSION_of_COMPOSITION_at_time:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_VERSION_of_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_VERSIONED_COMPOSITION_VERSION'
      content:
        application/json:
          schema:
            {}
      description: >
        `200 OK` is returned when the requested VERSION is successfully
        retrieved.
    404_unknown_ehr_id_or_versioned_object_uid_or_no_version_at_time:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when `versioned_object_uid` does not exist, or when a version of the
        resource does not exist at the specified `version_at_time`.
    404_unknown_ehr_id_or_versioned_object_uid_or_version_uid:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when `versioned_object_uid` does not exist, or when a VERSION with
        `version_uid` does not exist.
    200_FOLDER_retrieved:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder'
      description: |
        `200 OK` is returned when the FOLDER is successfully retrieved.
    404_directory_unknown_ehr_id_or_no_version_at_time_or_no_path:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when a directory does not exist at the specified `version_at_time`, or
        when `path` does not exists within the directory.
    200_directory_updated:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder'
      description: >
        `200 OK` is returned when directory was successfully updated and the
        updated resource is returned in the body when `Prefer` header value is
        `return=representation`.
    204_directory_updated:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
      description: >
        `204 No Content` is returned when directory was updated and `Prefer`
        header is missing or is set to `return=minimal`.
    400_FOLDER:
      description: >
        `400 Bad Request` is returned when the request URL or body (if provided)
        could not be parsed or has invalid content (e.g. invalid `ehr_id`, or
        either the body of the request could not be read, or could not be
        converted to a valid FOLDER object).
    412_directory:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
      description: >
        `412 Precondition Failed` is returned when `If-Match` request header
        doesn't match the latest version on the service side.

        Returns also latest `version_uid` in the `Location` and `ETag` headers.
    201_directory:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder'
      description: >
        `201 Created` is returned when the FOLDER was created. 

        Content body is only returned when `Prefer` header has
        `return=representation`, otherwise only headers are returned.
    204_because_deleted:
      description: >
        `204 No Content` is returned when the resource identified by the request
        parameters has been (logically) deleted.
    400_invalid_ehr_id:
      description: |
        `400 Bad Request` is returned when the request has invalid `ehr_id`.
    404_directory_unknown_ehr_id_or_no_version_uid_or_no_path:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when a directory with `version_uid` does not exist, or when `path` does
        not exist within the directory.
    201_CONTRIBUTION:
      headers:
        ETag:
          $ref: '#/components/headers/ETag_CONTRIBUTION'
        Location:
          $ref: '#/components/headers/Location_CONTRIBUTION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contribution'
      description: >
        `201 Created` is returned when the CONTRIBUTION was created. 

        Content body is only returned when `Prefer` header has
        `return=representation`, otherwise only headers are returned.
    400_CONTRIBUTION:
      content:
        application/json:
          schema:
            {}
      description: >
        `400 Bad Request` is returned when the request URL or body could not be
        parsed or has invalid content (e.g. invalid `ehr_id`, or either the body
        of the request not be converted to a valid CONTRIBUTION object, or the
        modification type doesn’t match the operation - i.e. first version of a
        composition with MODIFICATION).
    200_CONTRIBUTION:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contribution'
      description: |
        `200 OK` is returned when the CONTRIBUTION is successfully retrieved.
    404_CONTRIBUTION:
      description: >
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or
        when a CONTRIBUTION with `contribution_uid` does not exist.
  parameters:
    subject_id:
      style: form
      explode: true
      name: subject_id
      description: |
        The EHR subject id.
      schema:
        type: string
        example: ins01
      in: query
      required: true
    subject_namespace:
      style: form
      explode: true
      name: subject_namespace
      description: |
        The EHR subject id namespace.
      schema:
        type: string
        example: examples
      in: query
      required: true
    Prefer:
      style: simple
      name: Prefer
      description: >
        Request header to indicate the preference over response details.

        The response will contain the entire resource when the `Prefer` header
        has a value of `return=representation`.
      schema:
        default: return=minimal
        enum:
          - return=representation
          - return=minimal
        type: string
      in: header
      required: false
    ehr_id:
      style: simple
      name: ehr_id
      description: |
        EHR identifier taken from EHR.ehr_id.value.
      schema:
        type: string
        example: 7d44b88c-4199-4bad-97dc-d78268e01398
      in: path
      required: true
    version_uid:
      style: simple
      name: version_uid
      description: |
        VERSION identifier taken from VERSION.uid.value.
      schema:
        type: string
        example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      in: path
      required: true
    version_at_time:
      style: form
      explode: true
      name: version_at_time
      description: |
        A given time in the extended ISO 8601 format.
      schema:
        type: string
        example: '2015-01-20T19:30:22.765+01:00'
      in: query
    If-Match:
      style: simple
      name: If-Match
      description: >
        Header to make the request conditional. 

        Together with `ETag` request tag, it helps to prevent simultaneous
        updates of a resource from overwriting each other ("mid-air
        collisions").

        The format is always an `version_uid` identifier enclosed by double
        quotes.

        The operation will be performed only if the existing latest
        `version_uid` of the resource (i.e. the `preceding_version_uid`) matches
        this header's value.
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1"'
      in: header
      required: true
    uid_based_id:
      style: simple
      name: uid_based_id
      description: >
        An abstract identifier: it can take a form of an OBJECT_VERSION_ID
        identifier taken from VERSION.uid.value (i.e. a `version_uid`), or a
        form of a HIER_OBJECT_ID identifier taken from
        VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      in: path
      required: true
    uid_based_id_as_versioned_object_uid:
      style: simple
      name: uid_based_id
      description: >
        An identifier in a form of a HIER_OBJECT_ID identifier taken from
        VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515
      in: path
      required: true
    uid_based_id_as_version_uid:
      style: simple
      name: uid_based_id
      description: >
        An identifier in a form of an OBJECT_VERSION_ID identifier taken from
        VERSION.uid.value (i.e. a `version_uid`).
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      in: path
      required: true
    versioned_object_uid_COMPOSITION:
      style: simple
      name: versioned_object_uid
      description: >
        VERSIONED_COMPOSITION identifier taken from
        VERSIONED_COMPOSITION.uid.value.
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515
      in: path
      required: true
    version_uid_COMPOSITION:
      style: simple
      name: version_uid
      description: |
        VERSION identifier taken from VERSION.uid.value.
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      in: path
      required: true
    path:
      style: form
      explode: true
      name: path
      description: >
        A path to a sub-folder; consists of slash-separated values of the name
        attribute of FOLDERs in the directory.
      schema:
        type: string
        example: episodes/a/b/c
      in: query
    contribution_uid:
      style: simple
      name: contribution_uid
      description: |
        The CONTRIBUTION uid.
      schema:
        type: string
        example: 0826851c-c4c2-4d61-92b9-410fb8275ff0
      in: path
      required: true
  headers:
    ETag_EHR:
      schema:
        type: string
        example: '"7d44b88c-4199-4bad-97dc-d78268e01398"'
      description: >
        The `ETag` (i.e. entity tag) response header is the `ehr_id` identifier,
        enclosed by double quotes.
    Location_EHR:
      schema:
        format: url
        type: string
        example: >-
          https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398
      description: |
        The `Location` response header indicates the URL of the EHR resource.
    ETag:
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2"'
      description: >
        The `ETag` (i.e. entity tag) response header is an identifier (e.g. a
        `version_uid` enclosed by double quotes) for a specific version of a
        resource.
    Location_EHR_STATUS:
      schema:
        format: url
        type: string
        example: >-
          https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      description: >
        The `Location` response header indicates the URL of the EHR_STATUS
        resource.
    ETag_VERSION:
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2"'
      description: >
        The `ETag` (i.e. entity tag) response header is the VERSION identifier
        (i.e. the `version_uid`) enclosed by double quotes.
    Location_VERSIONED_EHR_STATUS_VERSION:
      schema:
        format: url
        type: string
        example: >-
          https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/versioned_ehr_status/version/6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1
      description: >
        The `Location` response header indicates the URL of the VERSION
        resource.
    ETag_COMPOSITION:
      schema:
        type: string
        example: '"8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"'
      description: >
        The `ETag` (i.e. entity tag) response header is an identifier (e.g. a
        `version_uid` enclosed by double quotes) for a specific version of a
        resource.
    Location_COMPOSITION:
      schema:
        format: url
        type: string
        example: >-
          https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      description: >
        The `Location` response header indicates the URL of the COMPOSITION
        resource.
    ETag_VERSION_of_COMPOSITION:
      schema:
        type: string
        example: '"8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"'
      description: >
        The `ETag` (i.e. entity tag) response header is the VERSION identifier
        (i.e. the `version_uid`) enclosed by double quotes.
    Location_VERSIONED_COMPOSITION_VERSION:
      schema:
        format: url
        type: string
        example: >-
          https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/versioned_composition/8849182c-82ad-4088-a07f-48ead4180515/version/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      description: >
        The `Location` response header indicates the URL of the VERSION
        resource.
    ETag_FOLDER:
      schema:
        type: string
        example: '"8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"'
      description: >
        The `ETag` (i.e. entity tag) response header is an identifier (e.g. a
        `version_uid` enclosed by double quotes) for a specific version of a
        resource.
    Location_directory:
      schema:
        format: url
        type: string
        example: >-
          https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/directory/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      description: >
        The `Location` response header indicates the URL of the directory FOLDER
        resource.
    ETag_CONTRIBUTION:
      schema:
        type: string
        example: '"0826851c-c4c2-4d61-92b9-410fb8275ff0"'
      description: >
        The `ETag` (i.e. entity tag) response header is the `contribution_uid`
        identifier, enclosed by double quotes.
    Location_CONTRIBUTION:
      schema:
        format: url
        type: string
        example: >-
          https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/contribution/0826851c-c4c2-4d61-92b9-410fb8275ff0
      description: >
        The `Location` response header indicates the URL of the CONTRIBUTION
        resource.
  securitySchemes: {}
tags:
  - name: EHR
    description: >
      Management of
      [EHRs](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_class).

      Actions upon resources of this group are also formally described in the
      [I_EHR_SERVICE](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_service_interface)
      Abstract Service Model interface.
  - name: EHR_STATUS
    description: >
      Management of
      [EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_status_class)
      and
      [VERSIONED_EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_ehr_status_class)
      resources.

      Actions upon resources of this group are also formally described in the
      [I_EHR_STATUS](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_status_interface)
      Abstract Service Model interface.
  - name: COMPOSITION
    description: >
      Management of
      [COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_composition_class)
      and
      [VERSIONED_COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_composition_class)
      resources.

      Actions upon resources of this group are also formally described in the
      [I_EHR_COMPOSITION](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_composition_interface)
      Abstract Service Model interface.
  - name: DIRECTORY
    description: >
      Management of the
      [directory](https://specifications.openehr.org/releases/RM/latest/ehr.html#_directory)
      [FOLDER](https://specifications.openehr.org/releases/RM/latest/common.html#_folder_class)
      resource.

      Actions upon resources of this group are also formally described in the
      [I_EHR_DIRECTORY](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_directory_interface)
      Abstract Service Model interface.
  - name: CONTRIBUTION
    description: >
      Management of
      [CONTRIBUTION](https://specifications.openehr.org/releases/RM/latest/common.html#_contribution_class)
      resource.

      Actions upon resources of this group are also formally described in the
      [I_EHR_CONTRIBUTION](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_contribution_interface)
      Abstract Service Model interface.
  - name: EHR_schema
    description: >
      This resource is formally specified in Reference Model as the
      [EHR](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_class)
      class.

    x-displayName: EHR
  - name: EHR_STATUS_schema
    description: >
      The following resources are formally specified in the Reference Model as
      [EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_status_class)
      and
      [VERSIONED_EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_ehr_status_class)
      classes.

      <div class="mb-5"></div>

    x-displayName: EHR_STATUS
  - name: COMPOSITION_schema
    description: >
      The following resources are formally specified in the Reference Model as
      [COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_composition_class)
      and
      [VERSIONED_COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_composition_class)
      classes.

      <div class="mb-5"></div>

    x-displayName: COMPOSITION
  - name: DIRECTORY_schema
    description: >
      This resource is formally specified in Reference Model in the
      [directory](https://specifications.openehr.org/releases/RM/latest/ehr.html#_directory)
      section, using
      [FOLDER](https://specifications.openehr.org/releases/RM/latest/common.html#_folder_class)
      class.


      <SchemaDefinition schemaRef="#/components/schemas/Folder" />
    x-displayName: DIRECTORY
  - name: CONTRIBUTION_schema
    description: >
      The following resources are formally specified in the Reference Model as
      the
      [CONTRIBUTION](https://specifications.openehr.org/releases/RM/latest/common.html#_contribution_class)
      class.

      <div class="mb-5"></div>

    x-displayName: CONTRIBUTION
x-tagGroups:
  - name: Resource endpoints
    tags:
      - EHR
      - EHR_STATUS
      - COMPOSITION
      - DIRECTORY
      - CONTRIBUTION
  - name: Resource schemas
    tags:
      - EHR_schema
      - EHR_STATUS_schema
      - COMPOSITION_schema
      - DIRECTORY_schema
      - CONTRIBUTION_schema
security: []
